trigger: none
  
pr:
  branches:
    include:
    - main
    
  paths:
    include:
      - 'Application/UserService/*'
      - 'Application/UserService.Test/*'
    exclude:
      - 'Application/*'

resources:
- repo: self

variables:
  imageRepo: userservice
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build And Push
      inputs:
        containerRegistry: 'AzureRegistry'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Application/UserService/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Tests
  displayName: Run Tests
  jobs: 
  - job: Test
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/UserService.*[Tt]est*/*.csproj'    

- stage: Deploy
  displayName: Deploy to dev
  dependsOn: 
    - Build
    - Tests
  variables:
    acrsecret: 213j212iojewasdskd2oi1
    acrDevUrl: examregistry2sem.azurecr.io
    replicaNo: 1
  jobs:
    - deployment: Deploy
      displayName: Deploy to AKS
      environment: 'k8sdevNewest.app'
      pool: 
        vmImage: ubuntu-latest
      strategy:
        runOnce:
          deploy:
            steps: 
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: '$(Pipeline.Workspace)/manifests'
            - task: KubernetesManifest@0
              inputs:
                action: 'createSecret'
                namespace: 'app'
                secretType: 'dockerRegistry'
                secretName: '$(acrsecret)'
                dockerRegistryEndpoint: 'AzureRegistry'
            - task: replacetokens@5
              displayName: Replace tokens
              inputs:
                rootDirectory: '$(Pipeline.Workspace)/manifests/'
                targetFiles: 'userservice_deployment.yml'
                encoding: 'auto'
                tokenPattern: 'custom'
                tokenPrefix: '#'
                tokenSuffix: '#'
                writeBOM: true
                actionOnMissing: 'warn'
                keepToken: false
                actionOnNoFiles: 'continue'
                enableTransforms: false
                enableRecursion: false
                useLegacyPattern: false
                enableTelemetry: true
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                namespace: 'app'
                manifests: |
                  $(Pipeline.Workspace)/manifests/userservice_deployment.yml
                containers: '$(acrDevUrl)/$(imageRepo):$(tag)'
                imagePullSecrets: '$(acrsecret)'
       