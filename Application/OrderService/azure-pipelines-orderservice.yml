trigger: none

pr:
  branches:
    include:
      - main

  paths:
    include:
      - "Application/OrderService/*"
    exclude:
      - "Application/*"

resources:
  - repo: self

variables:
  imageRepo: orderservice
  tag: "$(Build.BuildId)"

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build And Push
            inputs:
              containerRegistry: "AzureRegistry"
              repository: "$(imageRepo)"
              command: "buildAndPush"
              Dockerfile: "$(Build.SourcesDirectory)/Application/DockerfileOrder"
              tags: |
                $(tag)
                latest
          - task: DotNetCoreCLI@2
            displayName: Tests
            inputs:
              command: "test"
              projects: "**/OrderService.*[Tt]est*/*.csproj"
          - task: DotNetCoreCLI@2
            displayName: "Install dotnet-stryker"
            inputs:
              command: custom
              custom: tool
              arguments: install dotnet-stryker --tool-path $(Agent.BuildDirectory)/tools
          - task: Powershell@2
            displayName: "Run dotnet-stryker"
            inputs:
              workingDirectory: "$(Build.SourcesDirectory)/Application/OrderService.Test"
              targetType: "inline"
              pwsh: true
              script: $(Agent.BuildDirectory)/tools/dotnet-stryker
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Pipeline.Workspace)/s/kubernetes"
              artifact: "manifests"
              publishLocation: "pipeline"

  - stage: Deploy
    displayName: Deploy to dev
    dependsOn: Build
    variables:
      acrsecret: 213j212iojewasdskd2oi1
      acrDevUrl: examregistry2sem.azurecr.io
      replicaNo: 1
    jobs:
      - deployment: Deploy
        displayName: Deploy to AKS
        environment: "k8sdevNewest.app"
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: "current"
                    artifactName: "manifests"
                    targetPath: "$(Pipeline.Workspace)/manifests"
                - task: KubernetesManifest@0
                  inputs:
                    action: "createSecret"
                    namespace: "app"
                    secretType: "dockerRegistry"
                    secretName: "$(acrsecret)"
                    dockerRegistryEndpoint: "AzureRegistry"
                - task: replacetokens@5
                  displayName: Replace tokens
                  inputs:
                    rootDirectory: "$(Pipeline.Workspace)/manifests/"
                    targetFiles: "orderservice_deployment.yml"
                    encoding: "auto"
                    tokenPattern: "custom"
                    tokenPrefix: "#"
                    tokenSuffix: "#"
                    writeBOM: true
                    actionOnMissing: "warn"
                    keepToken: false
                    actionOnNoFiles: "continue"
                    enableTransforms: false
                    enableRecursion: false
                    useLegacyPattern: false
                    enableTelemetry: true
                - task: KubernetesManifest@0
                  inputs:
                    action: "deploy"
                    namespace: "app"
                    manifests: |
                      $(Pipeline.Workspace)/manifests/orderservice_deployment.yml
                    containers: "$(acrDevUrl)/$(imageRepo):$(tag)"
                    imagePullSecrets: "$(acrsecret)"
