// <auto-generated />
using System;
using FeedbackService.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeedbackService.Migrations
{
    [DbContext(typeof(DBFeedbackServiceContext))]
    [Migration("20221205092848_firstmig")]
    partial class firstmig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FeedbackService.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DeliveryDriverId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveryDriverId = 3,
                            OrderId = 2,
                            Rating = 5,
                            RestaurantId = 2,
                            ReviewDate = new DateTime(2022, 12, 5, 10, 28, 47, 891, DateTimeKind.Local).AddTicks(7911),
                            ReviewText = "Maden var god og blev leveret hurtigt",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeliveryDriverId = 3,
                            OrderId = 1,
                            Rating = 1,
                            RestaurantId = 2,
                            ReviewDate = new DateTime(2022, 12, 5, 10, 28, 47, 891, DateTimeKind.Local).AddTicks(7921),
                            ReviewText = "Maden var dårlig og blev leveret efter 3 timer",
                            UserId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
