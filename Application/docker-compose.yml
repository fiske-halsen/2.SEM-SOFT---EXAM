version: "3.4"

services:

#---------- Feedbackservice -----------
    api-feedbackservice:
        build:
          context: FeedbackService/
          dockerfile: Dockerfile
        ports:
          - "8080:80"
        depends_on:
          - db-feedbackservice

    db-feedbackservice:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        ports:
          - "5434:1433"
        volumes:
          - ./data/feedback-data:/var/opt/mssql/data  
        environment:
            SA_PASSWORD: "S3cur3P@ssW0rd!"
            ACCEPT_EULA: "Y"

#---------- Userservice -----------
    api-userservice:
        build:
          context: UserService/
          dockerfile: Dockerfile
        ports:
          - "8081:80"
        
        depends_on:
          - db_userservice

    db_userservice:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        ports:
          - "5435:1433"
        volumes:
          - ./data/user-data:/var/opt/mssql/data
        environment:
            SA_PASSWORD: "S3cur3P@ssW0rd!"
            ACCEPT_EULA: "Y"

  #---------- Deliveryservice -----------
    api-deliveryservice:
          build:
            context: DeliveryService/
            dockerfile: Dockerfile
          ports:
            - "8082:80"
          
          depends_on:
            - db_deliveryservice

    db_deliveryservice:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        ports:
          - "5436:1433"
        volumes:
          - ./data/delivery-data:/var/opt/mssql/data
        environment:
            SA_PASSWORD: "S3cur3P@ssW0rd!"
            ACCEPT_EULA: "Y"

    #---------- Orderservice -----------  
    api-orderservice:
          build:
            context: OrderService/
            dockerfile: Dockerfile
          ports:
            - "8083:80"
          
          depends_on:
            - db_orderservice

    db_orderservice:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        ports:
          - "5437:1433"
        volumes:
          - ./data/order-data:/var/opt/mssql/data
        environment:
            SA_PASSWORD: "S3cur3P@ssW0rd!"
            ACCEPT_EULA: "Y"

    #---------- Restaurantservice -----------       
    api-restaurantservice:
          build:
            context: RestaurantService/
            dockerfile: Dockerfile
          ports:
            - "8084:80"
          
          depends_on:
            - db_restaurantservice

    db_restaurantservice:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        ports:
          - "5438:1433"
        volumes:
          - ./data/restaurant-data:/var/opt/mssql/data
        environment:
            SA_PASSWORD: "S3cur3P@ssW0rd!"
            ACCEPT_EULA: "Y"
    #---------- Kafka -----------
    zookeeper:
      image: 'bitnami/zookeeper:latest'
      ports:
        - '2181:2181'
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes

    kafka:
      image: 'bitnami/kafka:latest'
      ports:
        - '9092:9092'

      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_LISTENERS=PLAINTEXT://:9092
        - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes

      volumes:
        -  ./data/kafka-data:/bitnami/kafka

      depends_on:

        - zookeeper


    